@page "/Tecnico/Index"
@inject TecnicoService tecnicoService
@inject TipoTecnicoService tipoTecnicoService
@inject NavigationManager Navigation
@rendermode InteractiveServer

<PageTitle>Index Tecnico</PageTitle>
<div class="card">
	<div class="shadow-lg">
		@*Header*@
		<div class="card-header text-center">
			<div class="bg-secondary rounded text-white">
				<h2><strong>Listado de T&eacute;cnicos</strong></h2>
			</div>
		</div>
		@*Body*@
		<div class="card-body">
			@*Labels*@
			<div class="row">
				<div class="col-3">
					<label class="form-label" for="Filtro"><strong>Filtrar por</strong></label>
				</div>
				<div class="col-4">
					<label class="form-label" for="ValorFiltro"><strong>B&uacute;squeda</strong></label>
				</div>
			</div>
			@*Inputs y Buttons*@
			<div class="row">
				@*Filtro*@
				<div class="col-3">
					<InputSelect class="form-select" @bind-Value="filtro">
						<option value="" disabled>Elija una opción</option>
						<option value="id"><strong>ID</strong></option>
						<option value="nombres"><strong>Nombres</strong></option>
						<option value="tipo"><strong>Tipo</strong></option>
					</InputSelect>
				</div>
				@*Búsqueda*@
				<div class="col-4">
					<div class="input-group">
						<input class="form-control" @bind="valorFiltro" placeholder="Buscar" />
						<button type="button" class="btn btn-outline-primary bi bi-search" @onclick="Buscar"></button>
					</div>
				</div>
				<div class="col-auto">
					<button type="button" class="btn btn-outline-secondary bi bi-arrow-counterclockwise" @onclick="Restablecer"> Restablecer</button>
				</div>
				<div class="col text-end">
					<button type="button" class="btn btn-outline-primary ms-2" @onclick="MostrarPantallaCrear">Crear</button>
				</div>
			</div>
			@*Tabla*@
			<div class="text-center mt-3">
				<table class="table table-bordered">
					<thead>
						<tr>
							<th>T&eacute;cnicoId</th>
							<th>Nombre</th>
							<th>Tipo</th>
							<th>SueldoHora</th>
							<th>Editar</th>
							<th>Detalle</th>
							<th>Eliminar</th>
						</tr>
					</thead>
					<tbody>
						@foreach (var tecnico in Tecnicos) {
							<tr>
								<td>@tecnico.TecnicoId</td>
								<td>@tecnico.Nombres</td>
								<td>@Descripcion(tecnico.TipoId)</td>
								<td>@tecnico.SueldoHora.ToString("N2")</td>
								<td><button trype="button" class="btn btn-outline-warning bi bi-pencil-square" @onclick="()=> MostrarPantallaEditar(tecnico.TecnicoId)"></button></td>
								<td><button type="button" class="btn btn-outline-info bi bi-eye-fill" @onclick="()=> MostrarPantallaDetalle(tecnico.TecnicoId)"></button></td>
								<td><button type="button" class="btn btn-outline-danger bi bi-trash2" @onclick="()=> MostrarPantallaEliminar(tecnico.TecnicoId)"></button></td>
							</tr>
						}
					</tbody>
				</table>
			</div>
		</div>
		@*footer*@
		<div class="card-footer">
			<p><strong>Total de T&eacute;cnicos: @Tecnicos.Count()</strong></p>
		</div>
	</div>
</div>

@code {
	public List<Tecnicos> Tecnicos { get; set; } = new List<Tecnicos>();
	public List<TiposTecnicos> ListaTiposTecnicos { get; set; } = new List<TiposTecnicos>();
	private string filtro = "";
	private string valorFiltro = "";

	protected override async Task OnInitializedAsync() {
		Tecnicos = await tecnicoService.Listar(t => t.TecnicoId > 0);
		ListaTiposTecnicos = await tipoTecnicoService.Listar(t => t.TipoId > 0);
	}

	public string Descripcion(int id) {
		var descripcion = tipoTecnicoService.ObtenerDescripcion(id);
		return descripcion.Descripcion;
	}

	private async Task Buscar() {
		if (valorFiltro.Trim() != "") {
			if (filtro == "id" && int.TryParse(valorFiltro, out int tecnicoId)) {
				var identificador = Tecnicos.Where(t => t.TecnicoId == tecnicoId).ToList();
				Tecnicos = identificador;
			}
			else if (filtro == "nombres") {
				Tecnicos = await tecnicoService.Listar(t => t.Nombres.ToLower().Contains(valorFiltro.ToLower()));
			}
			else if (filtro == "tipo") {
				var tipo = ListaTiposTecnicos.FirstOrDefault(t => t.Descripcion.ToLower().Contains(valorFiltro.ToLower()));
				if (tipo != null) {
					Tecnicos = await tecnicoService.Listar(t => t.TipoId == tipo.TipoId);
				}
			}
		}
		else {
			Tecnicos = await tecnicoService.Listar(t => true);
		}
	}

	public async Task Restablecer() {
		Tecnicos = await tecnicoService.Listar(t => t.TecnicoId > 0);
		filtro = string.Empty;
		valorFiltro = string.Empty;
	}

	public void MostrarPantallaCrear() {
		Navigation.NavigateTo("/Tecnico/Create");
	}
	public void MostrarPantallaEditar(int id) {
		Navigation.NavigateTo($"/Tecnico/Edit/{id}");
	}
	public void MostrarPantallaDetalle(int id) {
		Navigation.NavigateTo($"/Tecnico/Details/{id}");
	}
	public void MostrarPantallaEliminar(int id) {
		Navigation.NavigateTo($"/Tecnico/Delete/{id}");
	}
}